-- Expression evaluator

import List;
import State;
import Util;

-- The evaluator itself: takes a state and an expression,
-- returns integer value
--
-- An expression is represented by a data structure of the following shape:
--
-- expr = Var   (string)             |
--        Const (int)                |
--        Binop (string, expr, expr)

public fun evalExpr (st, expr) {
  case expr of
    Binop (op, a, b) ->
		  local x = evalExpr(st, a);
			local y = evalExpr(st, b);
			calculate(op, x, y)
    | Var(x) -> st(x)
    | Const(c) -> c
  esac
}
