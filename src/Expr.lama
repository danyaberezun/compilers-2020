-- Expression evaluator

import List;
import State;

public fun binopOperations (op, l, r) {
  case op of
          "+"  -> l + r
        | "-"  -> l - r
        | "/"  -> l / r
        | "*"  -> l * r
        | "&&" -> l && r
        | "!!" -> l !! r
        | "%"  -> l % r
        | "!=" -> l != r
        | "==" -> l == r
        | "<"  -> l < r
        | ">"  -> l > r
        | "<=" -> l <= r
        | ">=" -> l >= r
  esac
}
public fun evalExpr (st, expr) {
  case expr of
          Var(x) -> st(x) 
        | Const(n) -> n 
        | Binop (op, l, r) -> binopOperations(op,evalExpr(st,l),evalExpr(st,r))
    esac
}


