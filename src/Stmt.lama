-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
--
-- A statement is represented by a data structure of the following shape:
--
-- stmt = Assn   (string, expr)     |
--        Seq    (stmt, stmt)       |
--        Skip                      |
--        Read   (string)           |
--        Write  (expr)             |


fun eval (c@[s, w], stmt) {
    case stmt of
	      Seq(stmt1, stmt2) -> eval(eval(c, stmt1), stmt2) 			    
	    | Read(x) 		-> fun (s, x, [n, w]) { [s <- [x, n], w] } (s, x, readWorld(w)) 
	    | Write(e) 		-> [s, writeWorld(evalExpr(s, e), w)] 			    
	    | Assn(x, e) 	-> [s <- [x, evalExpr(s, e)], w]
	    esac
}