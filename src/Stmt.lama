-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
fun eval (c, stmt) {
 case c of [ state, world ] ->
    case stmt of
      Read  (x)    -> case readWorld (world) of [ a, world_ ] -> [ state <- [x, a], world_] esac
    | Write (a)    -> [ state, writeWorld (evalExpr (state, a), world) ]
    | Assn  (x, a) -> [ state <- [x, evalExpr (state, a)], world ]
    | Seq   (a, b) -> eval (eval (c, a), b)
    esac
  esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
