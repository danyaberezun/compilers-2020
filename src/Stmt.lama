-- Statement evaluator.

import State;
import Expr;
import World;

fun eval(c, stmt){
	case c of 
		[st, [i, o]] -> case stmt of
							  Assn  (x , expr) -> [(st <- [x, evalExpr (st, expr)]), [i, o]]  
							| Seq(s1, s2) -> eval (eval(c, s1), s2)     
							| Skip -> c                  
							| Read(x) -> case i of 
										 	el : ni -> [(st <- [x, el]), [ni, o]] 
										 esac  
							| Write(expr) -> [st, [i, evalExpr (st, expr) : o]]       
						esac
	esac 
}

public fun evalStmt(input, stmt){
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
