-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
--
-- A statement is represented by a data structure of the following shape:
--
-- stmt = Assn   (string, expr)     |
--        Seq    (stmt, stmt)       |
--        Skip                      |
--        Read   (string)           |
--        Write  (expr)             |

fun eval (c, stmt) {
  case stmt of
   Seq(s1,s2)     -> eval(eval(c,s1),s2)
   | Write(s1)    -> [c[0], writeWorld(evalExpr(c[0], s1), c[1])]
   | Read(s1)     -> local reader = readWorld(c[1]); [c[0] <- [s1, reader[0]], reader[1]]
   | Assn(s1,s2)  -> [c[0] <- [s1, evalExpr(c[0], s2)], c[1]]
   | Skip(s1)     -> c
  esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
