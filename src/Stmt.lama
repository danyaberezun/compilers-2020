-- Statement evaluator.

import State;
import Expr;
import World;


fun eval (c@[s, w], stmt) {
  case stmt of
    Read(x) -> fun(s, x, [n, w]) { [s <- [x, n], w] } (s, x, readWorld(w))
  | Write(expr) -> [s, writeWorld(evalExpr(s, expr), w)]
  | Assn(st, expr) -> [s <- [st, evalExpr(s, expr)], w]
  | Seq(stmt1, stmt2) -> eval(eval(c, stmt1), stmt2)
  esac
}


public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
